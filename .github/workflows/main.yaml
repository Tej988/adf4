on:
  push:
    branches:
      - adf_publish

permissions:
  id-token: write
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
      
      - name: Get latest code
        uses: actions/checkout@v2

 


      - name: 'ADF triggers stop --> Deployment and triggers start step'
        uses: azure/powershell@v1
        with:
          inlineScript: |
            $ResourceGroupName = "${{ vars.DEFAULT_PROPERTIES_RESOURCEGROUP_VALUE1 }}" 
            $DataFactoryName = "${{ vars.FACTORYNAME1 }}"
            $Annotations = "LDS" 
            $Triggers = Get-AzDataFactoryV2Trigger -ResourceGroupName $ResourceGroupName -DataFactoryName $DataFactoryName
            $stoppedTriggers = $Triggers | Where-Object { $_.Properties.RuntimeState -eq "Stopped" }
            $startedTriggers = @()
            
            foreach ($trigger in $Triggers) {
              if(($Trigger.Properties.Annotations[0] -eq $Annotations) -and ($Trigger.Properties.RuntimeState -eq "Started"))
              {
                # Stop the Triggers that were in "Started" state
                Stop-AzDataFactoryV2Trigger -ResourceGroupName $resourceGroupName -DataFactoryName $dataFactoryName -Name $trigger.Name -Force
                $startedTriggers += $trigger.Name
                Write-Host "Stopped trigger $($trigger.Name)."
              } elseif ($trigger.Triggerstate -eq "Stopped") {
                Write-Host "Trigger $($trigger.Name) is already in a stopped state."
              } else {
                Write-Host "Trigger $($trigger.Name) is in an unknown state: $($trigger.Triggerstate)."
              }
            }
      
            # Connect to Azure using the client secret
            Connect-AzAccount -ServicePrincipal -ApplicationId "${{ secrets.CLIENT_ID }}" -Credential (New-Object PSCredential "${{ secrets.CLIENT_ID }}", (ConvertTo-SecureString -String "${{ secrets.CLIENT_SECRET }}" -AsPlainText -Force)) -Tenant "${{ secrets.TENANT_ID }}"
            Set-AzContext -Subscription "${{ secrets.SUBSCRIPTION_ID }}"
            # Connect to Azure using the client secret


      
            # Deploy your ARM template (modify the paths as needed)
            New-AzResourceGroupDeployment -ResourceGroupName ${{ vars.DEFAULT_PROPERTIES_RESOURCEGROUP_VALUE1 }} -TemplateFile "./devadfbytej/ARMTemplateForFactory.json" -TemplateParameterFile "./devadfbytej/ARMTemplateParametersForFactory.json"
      
            # Start the Triggers that were in "Started" state before stopping
            foreach ($triggerName in $startedTriggers) {
              Start-AzDataFactoryV2Trigger -ResourceGroupName ${{ vars.DEFAULT_PROPERTIES_RESOURCEGROUP_VALUE1 }} -DataFactoryName ${{ vars.FACTORYNAME1 }} -Name $triggerName -Force
              Write-Host "Started trigger $triggerName."
            }
      
            Write-Host "Trigger stop, Deployment, and start step has been completed."
          azPSVersion: 'LatestVersion'
        if: success()
